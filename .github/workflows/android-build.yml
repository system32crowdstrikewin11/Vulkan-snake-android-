name: Android CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25b
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Build Tools and Platform
      run: sdkmanager "platforms;android-26" "build-tools;33.0.1"

    - name: CMake Configure
      run: >
        cmake -B build
        -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_LATEST_HOME/build/cmake/android.toolchain.cmake
        -DANDROID_ABI=arm64-v8a
        -DANDROID_PLATFORM=android-26

    - name: CMake Build
      run: cmake --build build

    - name: Prepare APK Contents
      run: |
        mkdir -p apk/lib/arm64-v8a
        cp build/libVulkanSnake.so apk/lib/arm64-v8a/

    - name: Create AndroidManifest with Version
      run: |
        echo '<?xml version="1.0" encoding="utf-8"?>' > apk/AndroidManifest.xml
        echo '<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.example.vulkansnake" android:versionCode="1" android:versionName="v0.47 alpha">' >> apk/AndroidManifest.xml
        echo '    <uses-sdk android:minSdkVersion="26" android:targetSdkVersion="33" />' >> apk/AndroidManifest.xml
        echo '    <uses-feature android:name="android.hardware.vulkan.level" android:version="0" android:required="true" />' >> apk/AndroidManifest.xml
        echo '    <application android:hasCode="false" android:label="Vulkan Snake">' >> apk/AndroidManifest.xml
        echo '        <activity android:name="android.app.NativeActivity" android:exported="true">' >> apk/AndroidManifest.xml
        echo '            <meta-data android:name="android.app.lib_name" android:value="VulkanSnake" />' >> apk/AndroidManifest.xml
        echo '            <intent-filter>' >> apk/AndroidManifest.xml
        echo '                <action android:name="android.intent.action.MAIN" />' >> apk/AndroidManifest.xml
        echo '                <category android:name="android.intent.category.LAUNCHER" />' >> apk/AndroidManifest.xml
        echo '            </intent-filter>' >> apk/AndroidManifest.xml
        echo '        </activity>' >> apk/AndroidManifest.xml
        echo '    </application>' >> apk/AndroidManifest.xml
        echo '</manifest>' >> apk/AndroidManifest.xml

    - name: Package Unsigned APK
      run: |
        # Create the initial APK shell from the manifest
        $ANDROID_HOME/build-tools/33.0.1/aapt2 link --proto-format -o unsigned.apk -I $ANDROID_HOME/platforms/android-26/android.jar --manifest apk/AndroidManifest.xml --no-auto-version
        
        # --- THE FIX ---
        # Change into the 'apk' directory and add the 'lib' folder to the zip archive, preserving the path structure.
        cd apk && zip -r ../unsigned.apk lib && cd ..

    - name: Generate Debug Key
      run: |
        keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"

    - name: Sign APK
      run: |
        $ANDROID_HOME/build-tools/33.0.1/apksigner sign --ks debug.keystore --ks-pass pass:android --out signed.apk unsigned.apk

    - name: Upload Signed APK
      uses: actions/upload-artifact@v4
      with:
        name: snake-game-signed-apk
        path: signed.apk
